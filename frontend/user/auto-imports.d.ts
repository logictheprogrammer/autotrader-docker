// Generated by 'unplugin-auto-import'
export {}
declare global {
  const CONFIG: typeof import('@/modules/config/config.store')['default']
  const DepositMethodStatus: typeof import('./src/modules/depositMethod/depositMethod.enum')['DepositMethodStatus']
  const DepositStatus: typeof import('./src/modules/deposit/deposit.enum')['DepositStatus']
  const EffectScope: typeof import('vue')['EffectScope']
  const Helpers: typeof import('@/util/helpers')['default']
  const NotificationCategory: typeof import('./src/modules/notification/notification.enum')['NotificationCategory']
  const ResponseStatus: typeof import('./src/modules/http/http.enum')['ResponseStatus']
  const TransactionCategory: typeof import('./src/modules/transaction/transaction.enum')['TransactionCategory']
  const TransferStatus: typeof import('./src/modules/transfer/transfer.enum')['TransferStatus']
  const UserAccount: typeof import('./src/modules/user/user.enum')['UserAccount']
  const UserEnvironment: typeof import('./src/modules/user/user.enum')['UserEnvironment']
  const UserRole: typeof import('./src/modules/user/user.enum')['UserRole']
  const UserStatus: typeof import('./src/modules/user/user.enum')['UserStatus']
  const WithdrawalMethodStatus: typeof import('./src/modules/withdrawalMethod/withdrawalMethod.enum')['WithdrawalMethodStatus']
  const WithdrawalStatus: typeof import('./src/modules/withdrawal/withdrawal.enum')['WithdrawalStatus']
  const axios: typeof import('axios')['default']
  const computed: typeof import('vue')['computed']
  const config: typeof import('./src/data/config')['default']
  const configStore: typeof import('./src/modules/config/config.store')['default']
  const countries: typeof import('./src/data/countries')['default']
  const createApp: typeof import('vue')['createApp']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const effectScope: typeof import('vue')['effectScope']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const languageCodes: typeof import('./src/data/languageCodes')['default']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: typeof import('vue-router')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('vue-router')['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const resolveDirective: typeof import('vue')['resolveDirective']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useAttrs: typeof import('vue')['useAttrs']
  const useAuthStore: typeof import('./src/modules/auth/auth.store')['useAuthStore']
  const useConfigStore: typeof import('./src/modules/config/config.store')['useConfigStore']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useDepositMethodStore: typeof import('./src/modules/depositMethod/depositMethod.store')['useDepositMethodStore']
  const useDepositStore: typeof import('./src/modules/deposit/deposit.store')['useDepositStore']
  const useHttpStore: typeof import('./src/modules/http/http.store')['useHttpStore']
  const useLink: typeof import('vue-router')['useLink']
  const useNotificationStore: typeof import('./src/modules/notification/notification.store')['useNotificationStore']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useSlots: typeof import('vue')['useSlots']
  const useTransactionStore: typeof import('./src/modules/transaction/transaction.store')['useTransactionStore']
  const useTransferSettingsStore: typeof import('./src/modules/transferSettings/transferSettings.store')['useTransferSettingsStore']
  const useTransferStore: typeof import('./src/modules/transfer/transfer.store')['useTransferStore']
  const useUserStore: typeof import('./src/modules/user/user.store')['useUserStore']
  const useWithdrawalMethodStore: typeof import('./src/modules/withdrawalMethod/withdrawalMethod.store')['useWithdrawalMethodStore']
  const useWithdrawalStore: typeof import('./src/modules/withdrawal/withdrawal.store')['useWithdrawalStore']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
  const yup: typeof import('yup')
}
// for vue template auto import
import { UnwrapRef } from 'vue'
declare module 'vue' {
  interface ComponentCustomProperties {
    readonly CONFIG: UnwrapRef<typeof import('@/modules/config/config.store')['default']>
    readonly DepositMethodStatus: UnwrapRef<typeof import('./src/modules/depositMethod/depositMethod.enum')['DepositMethodStatus']>
    readonly DepositStatus: UnwrapRef<typeof import('./src/modules/deposit/deposit.enum')['DepositStatus']>
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly Helpers: UnwrapRef<typeof import('@/util/helpers')['default']>
    readonly NotificationCategory: UnwrapRef<typeof import('./src/modules/notification/notification.enum')['NotificationCategory']>
    readonly ResponseStatus: UnwrapRef<typeof import('./src/modules/http/http.enum')['ResponseStatus']>
    readonly TransactionCategory: UnwrapRef<typeof import('./src/modules/transaction/transaction.enum')['TransactionCategory']>
    readonly TransferStatus: UnwrapRef<typeof import('./src/modules/transfer/transfer.enum')['TransferStatus']>
    readonly UserAccount: UnwrapRef<typeof import('./src/modules/user/user.enum')['UserAccount']>
    readonly UserEnvironment: UnwrapRef<typeof import('./src/modules/user/user.enum')['UserEnvironment']>
    readonly UserRole: UnwrapRef<typeof import('./src/modules/user/user.enum')['UserRole']>
    readonly UserStatus: UnwrapRef<typeof import('./src/modules/user/user.enum')['UserStatus']>
    readonly WithdrawalMethodStatus: UnwrapRef<typeof import('./src/modules/withdrawalMethod/withdrawalMethod.enum')['WithdrawalMethodStatus']>
    readonly WithdrawalStatus: UnwrapRef<typeof import('./src/modules/withdrawal/withdrawal.enum')['WithdrawalStatus']>
    readonly axios: UnwrapRef<typeof import('axios')['default']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly config: UnwrapRef<typeof import('./src/data/config')['default']>
    readonly configStore: UnwrapRef<typeof import('./src/modules/config/config.store')['default']>
    readonly countries: UnwrapRef<typeof import('./src/data/countries')['default']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly languageCodes: UnwrapRef<typeof import('./src/data/languageCodes')['default']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeRouteLeave: UnwrapRef<typeof import('vue-router')['onBeforeRouteLeave']>
    readonly onBeforeRouteUpdate: UnwrapRef<typeof import('vue-router')['onBeforeRouteUpdate']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly resolveDirective: UnwrapRef<typeof import('vue')['resolveDirective']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useAuthStore: UnwrapRef<typeof import('./src/modules/auth/auth.store')['useAuthStore']>
    readonly useConfigStore: UnwrapRef<typeof import('./src/modules/config/config.store')['useConfigStore']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useDepositMethodStore: UnwrapRef<typeof import('./src/modules/depositMethod/depositMethod.store')['useDepositMethodStore']>
    readonly useDepositStore: UnwrapRef<typeof import('./src/modules/deposit/deposit.store')['useDepositStore']>
    readonly useHttpStore: UnwrapRef<typeof import('./src/modules/http/http.store')['useHttpStore']>
    readonly useLink: UnwrapRef<typeof import('vue-router')['useLink']>
    readonly useNotificationStore: UnwrapRef<typeof import('./src/modules/notification/notification.store')['useNotificationStore']>
    readonly useRoute: UnwrapRef<typeof import('vue-router')['useRoute']>
    readonly useRouter: UnwrapRef<typeof import('vue-router')['useRouter']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useTransactionStore: UnwrapRef<typeof import('./src/modules/transaction/transaction.store')['useTransactionStore']>
    readonly useTransferSettingsStore: UnwrapRef<typeof import('./src/modules/transferSettings/transferSettings.store')['useTransferSettingsStore']>
    readonly useTransferStore: UnwrapRef<typeof import('./src/modules/transfer/transfer.store')['useTransferStore']>
    readonly useUserStore: UnwrapRef<typeof import('./src/modules/user/user.store')['useUserStore']>
    readonly useWithdrawalMethodStore: UnwrapRef<typeof import('./src/modules/withdrawalMethod/withdrawalMethod.store')['useWithdrawalMethodStore']>
    readonly useWithdrawalStore: UnwrapRef<typeof import('./src/modules/withdrawal/withdrawal.store')['useWithdrawalStore']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
    readonly yup: UnwrapRef<typeof import('yup')>
  }
}
